
window.projectVersion = '0.8.0';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:Moccalotto" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Moccalotto.html">Moccalotto</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Moccalotto_Valit" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Moccalotto/Valit.html">Valit</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:Moccalotto_Valit_Contracts" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Moccalotto/Valit/Contracts.html">Contracts</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Moccalotto_Valit_Contracts_CheckManager" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Contracts/CheckManager.html">CheckManager</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Contracts_CheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Contracts/CheckProvider.html">CheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Contracts_FluentCheckInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Contracts/FluentCheckInterface.html">FluentCheckInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Moccalotto_Valit_Exceptions" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Moccalotto/Valit/Exceptions.html">Exceptions</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Moccalotto_Valit_Exceptions_InvalidContainerException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Exceptions/InvalidContainerException.html">InvalidContainerException</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Exceptions_InvalidValueException" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Exceptions/InvalidValueException.html">InvalidValueException</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Moccalotto_Valit_Facades" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Moccalotto/Valit/Facades.html">Facades</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Moccalotto_Valit_Facades_Check" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Facades/Check.html">Check</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Facades_Ensure" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Facades/Ensure.html">Ensure</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Moccalotto_Valit_Providers" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Moccalotto/Valit/Providers.html">Providers</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Moccalotto_Valit_Providers_ArrayCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/ArrayCheckProvider.html">ArrayCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_BasicCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/BasicCheckProvider.html">BasicCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_CustomCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/CustomCheckProvider.html">CustomCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_DateCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/DateCheckProvider.html">DateCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_FileSystemCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/FileSystemCheckProvider.html">FileSystemCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_JsonCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/JsonCheckProvider.html">JsonCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_NumberCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/NumberCheckProvider.html">NumberCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_ObjectCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/ObjectCheckProvider.html">ObjectCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_StringCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/StringCheckProvider.html">StringCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_UriCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/UriCheckProvider.html">UriCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_UuidCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/UuidCheckProvider.html">UuidCheckProvider</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Providers_XmlCheckProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Providers/XmlCheckProvider.html">XmlCheckProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Moccalotto_Valit_Test" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Moccalotto/Valit/Test.html">Test</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Moccalotto_Valit_Test_ContainerTestClass" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Test/ContainerTestClass.html">ContainerTestClass</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Moccalotto_Valit_Traits" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Moccalotto/Valit/Traits.html">Traits</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Moccalotto_Valit_Traits_ContainsResults" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Traits/ContainsResults.html">ContainsResults</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Traits_ProvideViaReflection" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Traits/ProvideViaReflection.html">ProvideViaReflection</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:Moccalotto_Valit_Util" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="Moccalotto/Valit/Util.html">Util</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:Moccalotto_Valit_Util_FilterSet" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Util/FilterSet.html">FilterSet</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Util_FlattenedContainer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="Moccalotto/Valit/Util/FlattenedContainer.html">FlattenedContainer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:Moccalotto_Valit_CheckMetaInfo" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Moccalotto/Valit/CheckMetaInfo.html">CheckMetaInfo</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_ContainerValidationResult" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Moccalotto/Valit/ContainerValidationResult.html">ContainerValidationResult</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_ContainerValidator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Moccalotto/Valit/ContainerValidator.html">ContainerValidator</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_CustomCallbackChecker" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Moccalotto/Valit/CustomCallbackChecker.html">CustomCallbackChecker</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_CustomChecker" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Moccalotto/Valit/CustomChecker.html">CustomChecker</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Fluent" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Moccalotto/Valit/Fluent.html">Fluent</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Manager" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Moccalotto/Valit/Manager.html">Manager</a>                    </div>                </li>                            <li data-name="class:Moccalotto_Valit_Result" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="Moccalotto/Valit/Result.html">Result</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "Moccalotto.html", "name": "Moccalotto", "doc": "Namespace Moccalotto"},{"type": "Namespace", "link": "Moccalotto/Valit.html", "name": "Moccalotto\\Valit", "doc": "Namespace Moccalotto\\Valit"},{"type": "Namespace", "link": "Moccalotto/Valit/Contracts.html", "name": "Moccalotto\\Valit\\Contracts", "doc": "Namespace Moccalotto\\Valit\\Contracts"},{"type": "Namespace", "link": "Moccalotto/Valit/Exceptions.html", "name": "Moccalotto\\Valit\\Exceptions", "doc": "Namespace Moccalotto\\Valit\\Exceptions"},{"type": "Namespace", "link": "Moccalotto/Valit/Facades.html", "name": "Moccalotto\\Valit\\Facades", "doc": "Namespace Moccalotto\\Valit\\Facades"},{"type": "Namespace", "link": "Moccalotto/Valit/Providers.html", "name": "Moccalotto\\Valit\\Providers", "doc": "Namespace Moccalotto\\Valit\\Providers"},{"type": "Namespace", "link": "Moccalotto/Valit/Test.html", "name": "Moccalotto\\Valit\\Test", "doc": "Namespace Moccalotto\\Valit\\Test"},{"type": "Namespace", "link": "Moccalotto/Valit/Traits.html", "name": "Moccalotto\\Valit\\Traits", "doc": "Namespace Moccalotto\\Valit\\Traits"},{"type": "Namespace", "link": "Moccalotto/Valit/Util.html", "name": "Moccalotto\\Valit\\Util", "doc": "Namespace Moccalotto\\Valit\\Util"},
            {"type": "Interface", "fromName": "Moccalotto\\Valit\\Contracts", "fromLink": "Moccalotto/Valit/Contracts.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html", "name": "Moccalotto\\Valit\\Contracts\\CheckManager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckManager", "fromLink": "Moccalotto/Valit/Contracts/CheckManager.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html#method_instance", "name": "Moccalotto\\Valit\\Contracts\\CheckManager::instance", "doc": "&quot;Get the default (global) manager instance.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckManager", "fromLink": "Moccalotto/Valit/Contracts/CheckManager.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html#method_create", "name": "Moccalotto\\Valit\\Contracts\\CheckManager::create", "doc": "&quot;Factory method.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckManager", "fromLink": "Moccalotto/Valit/Contracts/CheckManager.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html#method_hasCheck", "name": "Moccalotto\\Valit\\Contracts\\CheckManager::hasCheck", "doc": "&quot;Check if the manager can perform a given check.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckManager", "fromLink": "Moccalotto/Valit/Contracts/CheckManager.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html#method_executeCheck", "name": "Moccalotto\\Valit\\Contracts\\CheckManager::executeCheck", "doc": "&quot;Execute a check.&quot;"},
            
            {"type": "Interface", "fromName": "Moccalotto\\Valit\\Contracts", "fromLink": "Moccalotto/Valit/Contracts.html", "link": "Moccalotto/Valit/Contracts/CheckProvider.html", "name": "Moccalotto\\Valit\\Contracts\\CheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckProvider", "fromLink": "Moccalotto/Valit/Contracts/CheckProvider.html", "link": "Moccalotto/Valit/Contracts/CheckProvider.html#method_provides", "name": "Moccalotto\\Valit\\Contracts\\CheckProvider::provides", "doc": "&quot;Return an array of the checks provided by this provider.&quot;"},
            
            {"type": "Interface", "fromName": "Moccalotto\\Valit\\Contracts", "fromLink": "Moccalotto/Valit/Contracts.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_success", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::success", "doc": "&quot;Have all checks been completed successfully?&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_valid", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::valid", "doc": "&quot;Alias of success.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_invalid", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::invalid", "doc": "&quot;Alias of hasErrors.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_hasErrors", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::hasErrors", "doc": "&quot;Return true if there are errors.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_orThrowException", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::orThrowException", "doc": "&quot;Throw exceptions if any failures has occurred or occur later in the execution stream.&quot;"},
            
            {"type": "Interface", "fromName": "Moccalotto\\Valit", "fromLink": "Moccalotto/Valit.html", "link": "Moccalotto/Valit/CustomChecker.html", "name": "Moccalotto\\Valit\\CustomChecker", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\CustomChecker", "fromLink": "Moccalotto/Valit/CustomChecker.html", "link": "Moccalotto/Valit/CustomChecker.html#method_check", "name": "Moccalotto\\Valit\\CustomChecker::check", "doc": "&quot;&quot;"},
            
            
            {"type": "Class", "fromName": "Moccalotto\\Valit", "fromLink": "Moccalotto/Valit.html", "link": "Moccalotto/Valit/CheckMetaInfo.html", "name": "Moccalotto\\Valit\\CheckMetaInfo", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\CheckMetaInfo", "fromLink": "Moccalotto/Valit/CheckMetaInfo.html", "link": "Moccalotto/Valit/CheckMetaInfo.html#method___construct", "name": "Moccalotto\\Valit\\CheckMetaInfo::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\CheckMetaInfo", "fromLink": "Moccalotto/Valit/CheckMetaInfo.html", "link": "Moccalotto/Valit/CheckMetaInfo.html#method_jsonSerialize", "name": "Moccalotto\\Valit\\CheckMetaInfo::jsonSerialize", "doc": "&quot;Serialize to json.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\CheckMetaInfo", "fromLink": "Moccalotto/Valit/CheckMetaInfo.html", "link": "Moccalotto/Valit/CheckMetaInfo.html#method___debugInfo", "name": "Moccalotto\\Valit\\CheckMetaInfo::__debugInfo", "doc": "&quot;Helper for var_dump, print_r, and company.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\CheckMetaInfo", "fromLink": "Moccalotto/Valit/CheckMetaInfo.html", "link": "Moccalotto/Valit/CheckMetaInfo.html#method_addAlias", "name": "Moccalotto\\Valit\\CheckMetaInfo::addAlias", "doc": "&quot;Add an alias to this check.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\CheckMetaInfo", "fromLink": "Moccalotto/Valit/CheckMetaInfo.html", "link": "Moccalotto/Valit/CheckMetaInfo.html#method_description", "name": "Moccalotto\\Valit\\CheckMetaInfo::description", "doc": "&quot;Get the descitpion of this check.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\CheckMetaInfo", "fromLink": "Moccalotto/Valit/CheckMetaInfo.html", "link": "Moccalotto/Valit/CheckMetaInfo.html#method_aliases", "name": "Moccalotto\\Valit\\CheckMetaInfo::aliases", "doc": "&quot;Get the aliases of this check.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit", "fromLink": "Moccalotto/Valit.html", "link": "Moccalotto/Valit/ContainerValidationResult.html", "name": "Moccalotto\\Valit\\ContainerValidationResult", "doc": "&quot;Result of validating a container.&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidationResult", "fromLink": "Moccalotto/Valit/ContainerValidationResult.html", "link": "Moccalotto/Valit/ContainerValidationResult.html#method___construct", "name": "Moccalotto\\Valit\\ContainerValidationResult::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidationResult", "fromLink": "Moccalotto/Valit/ContainerValidationResult.html", "link": "Moccalotto/Valit/ContainerValidationResult.html#method_hasErrors", "name": "Moccalotto\\Valit\\ContainerValidationResult::hasErrors", "doc": "&quot;Did one or more tests fail?&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidationResult", "fromLink": "Moccalotto/Valit/ContainerValidationResult.html", "link": "Moccalotto/Valit/ContainerValidationResult.html#method_success", "name": "Moccalotto\\Valit\\ContainerValidationResult::success", "doc": "&quot;Did all tests pass?&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidationResult", "fromLink": "Moccalotto/Valit/ContainerValidationResult.html", "link": "Moccalotto/Valit/ContainerValidationResult.html#method_results", "name": "Moccalotto\\Valit\\ContainerValidationResult::results", "doc": "&quot;Return all results.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidationResult", "fromLink": "Moccalotto/Valit/ContainerValidationResult.html", "link": "Moccalotto/Valit/ContainerValidationResult.html#method_errors", "name": "Moccalotto\\Valit\\ContainerValidationResult::errors", "doc": "&quot;Return list of rendered errors.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidationResult", "fromLink": "Moccalotto/Valit/ContainerValidationResult.html", "link": "Moccalotto/Valit/ContainerValidationResult.html#method_renderedResults", "name": "Moccalotto\\Valit\\ContainerValidationResult::renderedResults", "doc": "&quot;Get all results as rendered strings.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidationResult", "fromLink": "Moccalotto/Valit/ContainerValidationResult.html", "link": "Moccalotto/Valit/ContainerValidationResult.html#method_errorMessagesByPath", "name": "Moccalotto\\Valit\\ContainerValidationResult::errorMessagesByPath", "doc": "&quot;Get all the error messages for a given path.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidationResult", "fromLink": "Moccalotto/Valit/ContainerValidationResult.html", "link": "Moccalotto/Valit/ContainerValidationResult.html#method_orThrowException", "name": "Moccalotto\\Valit\\ContainerValidationResult::orThrowException", "doc": "&quot;Throw an exception if this container has any errors.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit", "fromLink": "Moccalotto/Valit.html", "link": "Moccalotto/Valit/ContainerValidator.html", "name": "Moccalotto\\Valit\\ContainerValidator", "doc": "&quot;Validate a container (variable with array access).&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidator", "fromLink": "Moccalotto/Valit/ContainerValidator.html", "link": "Moccalotto/Valit/ContainerValidator.html#method___construct", "name": "Moccalotto\\Valit\\ContainerValidator::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidator", "fromLink": "Moccalotto/Valit/ContainerValidator.html", "link": "Moccalotto/Valit/ContainerValidator.html#method_passes", "name": "Moccalotto\\Valit\\ContainerValidator::passes", "doc": "&quot;Check container against a number of filters.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidator", "fromLink": "Moccalotto/Valit/ContainerValidator.html", "link": "Moccalotto/Valit/ContainerValidator.html#method_isTraversable", "name": "Moccalotto\\Valit\\ContainerValidator::isTraversable", "doc": "&quot;Check if we can traverse a given variable.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\ContainerValidator", "fromLink": "Moccalotto/Valit/ContainerValidator.html", "link": "Moccalotto/Valit/ContainerValidator.html#method_executeFilters", "name": "Moccalotto\\Valit\\ContainerValidator::executeFilters", "doc": "&quot;Execute an array of filters on a number of values.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Contracts", "fromLink": "Moccalotto/Valit/Contracts.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html", "name": "Moccalotto\\Valit\\Contracts\\CheckManager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckManager", "fromLink": "Moccalotto/Valit/Contracts/CheckManager.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html#method_instance", "name": "Moccalotto\\Valit\\Contracts\\CheckManager::instance", "doc": "&quot;Get the default (global) manager instance.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckManager", "fromLink": "Moccalotto/Valit/Contracts/CheckManager.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html#method_create", "name": "Moccalotto\\Valit\\Contracts\\CheckManager::create", "doc": "&quot;Factory method.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckManager", "fromLink": "Moccalotto/Valit/Contracts/CheckManager.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html#method_hasCheck", "name": "Moccalotto\\Valit\\Contracts\\CheckManager::hasCheck", "doc": "&quot;Check if the manager can perform a given check.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckManager", "fromLink": "Moccalotto/Valit/Contracts/CheckManager.html", "link": "Moccalotto/Valit/Contracts/CheckManager.html#method_executeCheck", "name": "Moccalotto\\Valit\\Contracts\\CheckManager::executeCheck", "doc": "&quot;Execute a check.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Contracts", "fromLink": "Moccalotto/Valit/Contracts.html", "link": "Moccalotto/Valit/Contracts/CheckProvider.html", "name": "Moccalotto\\Valit\\Contracts\\CheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\CheckProvider", "fromLink": "Moccalotto/Valit/Contracts/CheckProvider.html", "link": "Moccalotto/Valit/Contracts/CheckProvider.html#method_provides", "name": "Moccalotto\\Valit\\Contracts\\CheckProvider::provides", "doc": "&quot;Return an array of the checks provided by this provider.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Contracts", "fromLink": "Moccalotto/Valit/Contracts.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_success", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::success", "doc": "&quot;Have all checks been completed successfully?&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_valid", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::valid", "doc": "&quot;Alias of success.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_invalid", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::invalid", "doc": "&quot;Alias of hasErrors.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_hasErrors", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::hasErrors", "doc": "&quot;Return true if there are errors.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface", "fromLink": "Moccalotto/Valit/Contracts/FluentCheckInterface.html", "link": "Moccalotto/Valit/Contracts/FluentCheckInterface.html#method_orThrowException", "name": "Moccalotto\\Valit\\Contracts\\FluentCheckInterface::orThrowException", "doc": "&quot;Throw exceptions if any failures has occurred or occur later in the execution stream.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit", "fromLink": "Moccalotto/Valit.html", "link": "Moccalotto/Valit/CustomCallbackChecker.html", "name": "Moccalotto\\Valit\\CustomCallbackChecker", "doc": "&quot;Class for executing custom callbacks&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\CustomCallbackChecker", "fromLink": "Moccalotto/Valit/CustomCallbackChecker.html", "link": "Moccalotto/Valit/CustomCallbackChecker.html#method___construct", "name": "Moccalotto\\Valit\\CustomCallbackChecker::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\CustomCallbackChecker", "fromLink": "Moccalotto/Valit/CustomCallbackChecker.html", "link": "Moccalotto/Valit/CustomCallbackChecker.html#method_check", "name": "Moccalotto\\Valit\\CustomCallbackChecker::check", "doc": "&quot;Execute the check.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit", "fromLink": "Moccalotto/Valit.html", "link": "Moccalotto/Valit/CustomChecker.html", "name": "Moccalotto\\Valit\\CustomChecker", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\CustomChecker", "fromLink": "Moccalotto/Valit/CustomChecker.html", "link": "Moccalotto/Valit/CustomChecker.html#method_check", "name": "Moccalotto\\Valit\\CustomChecker::check", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Exceptions", "fromLink": "Moccalotto/Valit/Exceptions.html", "link": "Moccalotto/Valit/Exceptions/InvalidContainerException.html", "name": "Moccalotto\\Valit\\Exceptions\\InvalidContainerException", "doc": "&quot;Exception thrown when a value is invalid.&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Exceptions\\InvalidContainerException", "fromLink": "Moccalotto/Valit/Exceptions/InvalidContainerException.html", "link": "Moccalotto/Valit/Exceptions/InvalidContainerException.html#method___construct", "name": "Moccalotto\\Valit\\Exceptions\\InvalidContainerException::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Exceptions\\InvalidContainerException", "fromLink": "Moccalotto/Valit/Exceptions/InvalidContainerException.html", "link": "Moccalotto/Valit/Exceptions/InvalidContainerException.html#method_getExpandedMessage", "name": "Moccalotto\\Valit\\Exceptions\\InvalidContainerException::getExpandedMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Exceptions\\InvalidContainerException", "fromLink": "Moccalotto/Valit/Exceptions/InvalidContainerException.html", "link": "Moccalotto/Valit/Exceptions/InvalidContainerException.html#method_getResults", "name": "Moccalotto\\Valit\\Exceptions\\InvalidContainerException::getResults", "doc": "&quot;Get Results&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Exceptions\\InvalidContainerException", "fromLink": "Moccalotto/Valit/Exceptions/InvalidContainerException.html", "link": "Moccalotto/Valit/Exceptions/InvalidContainerException.html#method___call", "name": "Moccalotto\\Valit\\Exceptions\\InvalidContainerException::__call", "doc": "&quot;Forward calls to inner container.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Exceptions", "fromLink": "Moccalotto/Valit/Exceptions.html", "link": "Moccalotto/Valit/Exceptions/InvalidValueException.html", "name": "Moccalotto\\Valit\\Exceptions\\InvalidValueException", "doc": "&quot;Exception thrown when a value is invalid.&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Exceptions\\InvalidValueException", "fromLink": "Moccalotto/Valit/Exceptions/InvalidValueException.html", "link": "Moccalotto/Valit/Exceptions/InvalidValueException.html#method___construct", "name": "Moccalotto\\Valit\\Exceptions\\InvalidValueException::__construct", "doc": "&quot;Constructor.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Facades", "fromLink": "Moccalotto/Valit/Facades.html", "link": "Moccalotto/Valit/Facades/Check.html", "name": "Moccalotto\\Valit\\Facades\\Check", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Facades\\Check", "fromLink": "Moccalotto/Valit/Facades/Check.html", "link": "Moccalotto/Valit/Facades/Check.html#method_that", "name": "Moccalotto\\Valit\\Facades\\Check::that", "doc": "&quot;Check that a single variable passes certain criteria.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Facades\\Check", "fromLink": "Moccalotto/Valit/Facades/Check.html", "link": "Moccalotto/Valit/Facades/Check.html#method_container", "name": "Moccalotto\\Valit\\Facades\\Check::container", "doc": "&quot;Ensure that a container passes certain criteria.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Facades", "fromLink": "Moccalotto/Valit/Facades.html", "link": "Moccalotto/Valit/Facades/Ensure.html", "name": "Moccalotto\\Valit\\Facades\\Ensure", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Facades\\Ensure", "fromLink": "Moccalotto/Valit/Facades/Ensure.html", "link": "Moccalotto/Valit/Facades/Ensure.html#method_that", "name": "Moccalotto\\Valit\\Facades\\Ensure::that", "doc": "&quot;Ensure that a single variable passes certain criteria.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Facades\\Ensure", "fromLink": "Moccalotto/Valit/Facades/Ensure.html", "link": "Moccalotto/Valit/Facades/Ensure.html#method_container", "name": "Moccalotto\\Valit\\Facades\\Ensure::container", "doc": "&quot;Ensure that a container passes certain criteria.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit", "fromLink": "Moccalotto/Valit.html", "link": "Moccalotto/Valit/Fluent.html", "name": "Moccalotto\\Valit\\Fluent", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Fluent", "fromLink": "Moccalotto/Valit/Fluent.html", "link": "Moccalotto/Valit/Fluent.html#method___construct", "name": "Moccalotto\\Valit\\Fluent::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Fluent", "fromLink": "Moccalotto/Valit/Fluent.html", "link": "Moccalotto/Valit/Fluent.html#method___call", "name": "Moccalotto\\Valit\\Fluent::__call", "doc": "&quot;Execute checks by \&quot;calling\&quot; them.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit", "fromLink": "Moccalotto/Valit.html", "link": "Moccalotto/Valit/Manager.html", "name": "Moccalotto\\Valit\\Manager", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Manager", "fromLink": "Moccalotto/Valit/Manager.html", "link": "Moccalotto/Valit/Manager.html#method_instance", "name": "Moccalotto\\Valit\\Manager::instance", "doc": "&quot;Get the default (global) manager instance.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Manager", "fromLink": "Moccalotto/Valit/Manager.html", "link": "Moccalotto/Valit/Manager.html#method_create", "name": "Moccalotto\\Valit\\Manager::create", "doc": "&quot;Factory method.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Manager", "fromLink": "Moccalotto/Valit/Manager.html", "link": "Moccalotto/Valit/Manager.html#method___construct", "name": "Moccalotto\\Valit\\Manager::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Manager", "fromLink": "Moccalotto/Valit/Manager.html", "link": "Moccalotto/Valit/Manager.html#method_setAsGlobal", "name": "Moccalotto\\Valit\\Manager::setAsGlobal", "doc": "&quot;Set this manager instance as the global one.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Manager", "fromLink": "Moccalotto/Valit/Manager.html", "link": "Moccalotto/Valit/Manager.html#method_loadProvider", "name": "Moccalotto\\Valit\\Manager::loadProvider", "doc": "&quot;Load a provider and register all its checks.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Manager", "fromLink": "Moccalotto/Valit/Manager.html", "link": "Moccalotto/Valit/Manager.html#method_checks", "name": "Moccalotto\\Valit\\Manager::checks", "doc": "&quot;Get all checks.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Manager", "fromLink": "Moccalotto/Valit/Manager.html", "link": "Moccalotto/Valit/Manager.html#method_addProvider", "name": "Moccalotto\\Valit\\Manager::addProvider", "doc": "&quot;Add the checks from a provider to the manager.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Manager", "fromLink": "Moccalotto/Valit/Manager.html", "link": "Moccalotto/Valit/Manager.html#method_hasCheck", "name": "Moccalotto\\Valit\\Manager::hasCheck", "doc": "&quot;Check if the manager can perform a given check.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Manager", "fromLink": "Moccalotto/Valit/Manager.html", "link": "Moccalotto/Valit/Manager.html#method_executeCheck", "name": "Moccalotto\\Valit\\Manager::executeCheck", "doc": "&quot;Execute a check.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html#method_hasArrayAccess", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider::hasArrayAccess", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html#method_isCountable", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider::isCountable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html#method_checkArrayAccess", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider::checkArrayAccess", "doc": "&quot;Check that $value can be accessed as an array.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html#method_checkAssociative", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider::checkAssociative", "doc": "&quot;Check that $value is an associative array - i.e. that it contains no integer-keys.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html#method_checkNumericIndex", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider::checkNumericIndex", "doc": "&quot;Check that $value is a conventional array - i.e. that it contains only integer-keys.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html#method_checkNotEmpty", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider::checkNotEmpty", "doc": "&quot;Check that $value is a non-empty array or Countable.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html#method_checkEmpty", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider::checkEmpty", "doc": "&quot;Check that $value is an empty array or Countable.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html#method_checkUniqueValues", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider::checkUniqueValues", "doc": "&quot;Check that $value is an array with unique values.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ArrayCheckProvider.html", "link": "Moccalotto/Valit/Providers/ArrayCheckProvider.html#method_checkKeyExists", "name": "Moccalotto\\Valit\\Providers\\ArrayCheckProvider::checkKeyExists", "doc": "&quot;Check that $value is an array or ArrayAccess that has the given $key.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkIdenticalTo", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkIdenticalTo", "doc": "&quot;Check that $value === $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkEquals", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkEquals", "doc": "&quot;Check that $value == $against (loose comparison).&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkIsOneOf", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkIsOneOf", "doc": "&quot;Check that $value is equal to (==) one of the values in $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkIsTruthy", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkIsTruthy", "doc": "&quot;Check that $value is truthy.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkIsFalsy", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkIsFalsy", "doc": "&quot;Check that $value is falsy.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkIsTrue", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkIsTrue", "doc": "&quot;Check that $value is identical to true.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkIsFalse", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkIsFalse", "doc": "&quot;Check that $value is identical to false.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkHasType", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkHasType", "doc": "&quot;Check that $value is identical to false.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkScalar", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkScalar", "doc": "&quot;Check that $value is scalar.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkBool", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkBool", "doc": "&quot;Check that $value is a boolean.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkArray", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkArray", "doc": "&quot;Check that $value is an array.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkFloat", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkFloat", "doc": "&quot;Check that $value is a float.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkInteger", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkInteger", "doc": "&quot;Check that $value is a float.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkString", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkString", "doc": "&quot;Check that $value is a float.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkObject", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkObject", "doc": "&quot;Check that $value is a float.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkNull", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkNull", "doc": "&quot;Check that $value is null.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkNotNull", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkNotNull", "doc": "&quot;Check that $value is null.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkResource", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkResource", "doc": "&quot;Check that $value is a resource.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkResourceType", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkResourceType", "doc": "&quot;Check that $value is a resource of the given type.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\BasicCheckProvider", "fromLink": "Moccalotto/Valit/Providers/BasicCheckProvider.html", "link": "Moccalotto/Valit/Providers/BasicCheckProvider.html#method_checkCallable", "name": "Moccalotto\\Valit\\Providers\\BasicCheckProvider::checkCallable", "doc": "&quot;Check that $value is callable.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/CustomCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\CustomCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\CustomCheckProvider", "fromLink": "Moccalotto/Valit/Providers/CustomCheckProvider.html", "link": "Moccalotto/Valit/Providers/CustomCheckProvider.html#method_checkPassesCallback", "name": "Moccalotto\\Valit\\Providers\\CustomCheckProvider::checkPassesCallback", "doc": "&quot;Check if $value passes a validation via a callback that returns a boolean.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\CustomCheckProvider", "fromLink": "Moccalotto/Valit/Providers/CustomCheckProvider.html", "link": "Moccalotto/Valit/Providers/CustomCheckProvider.html#method_checkPassesChecker", "name": "Moccalotto\\Valit\\Providers\\CustomCheckProvider::checkPassesChecker", "doc": "&quot;Chec if $value passes a custom checker&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "doc": "&quot;Check that dates for validity.&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_overrideNow", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::overrideNow", "doc": "&quot;In order to facilitate testing, we must be able to lock\/override the \&quot;now\&quot; datetime.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_now", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::now", "doc": "&quot;Get the current DateTime.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_canParse", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::canParse", "doc": "&quot;Is the candidate value can be treated as a date.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_dt", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::dt", "doc": "&quot;Convert the candidate value into a DateTime object.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_compare", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::compare", "doc": "&quot;Compare two datetimes in a PHP-version agnostic way.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkDateParsable", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkDateParsable", "doc": "&quot;Check if $value is a string containing a parseable date.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkDateAfter", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkDateAfter", "doc": "&quot;Check if $value is a date after $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkDateBefore", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkDateBefore", "doc": "&quot;Check if $value is a date after $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkInThePast", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkInThePast", "doc": "&quot;Check if $value is a date in the past.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkInTheFuture", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkInTheFuture", "doc": "&quot;Check if $value is a date in the past.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkAtMidnight", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkAtMidnight", "doc": "&quot;Check if $value is a date where the time-component is 00:00:00.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkAtNoon", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkAtNoon", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkSameDateAs", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkSameDateAs", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkWeekdaySameAs", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkWeekdaySameAs", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\DateCheckProvider", "fromLink": "Moccalotto/Valit/Providers/DateCheckProvider.html", "link": "Moccalotto/Valit/Providers/DateCheckProvider.html#method_checkBirthday", "name": "Moccalotto\\Valit\\Providers\\DateCheckProvider::checkBirthday", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider", "fromLink": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html", "link": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html#method_checkFileExists", "name": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider::checkFileExists", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider", "fromLink": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html", "link": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html#method_checkDirExists", "name": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider::checkDirExists", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider", "fromLink": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html", "link": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html#method_checkFileReadable", "name": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider::checkFileReadable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider", "fromLink": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html", "link": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html#method_checkDirReadable", "name": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider::checkDirReadable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider", "fromLink": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html", "link": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html#method_checkFileWriteable", "name": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider::checkFileWriteable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider", "fromLink": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html", "link": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html#method_checkDirWritable", "name": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider::checkDirWritable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider", "fromLink": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html", "link": "Moccalotto/Valit/Providers/FileSystemCheckProvider.html#method_checkExecutable", "name": "Moccalotto\\Valit\\Providers\\FileSystemCheckProvider::checkExecutable", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/JsonCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\JsonCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\JsonCheckProvider", "fromLink": "Moccalotto/Valit/Providers/JsonCheckProvider.html", "link": "Moccalotto/Valit/Providers/JsonCheckProvider.html#method_checkIsJson", "name": "Moccalotto\\Valit\\Providers\\JsonCheckProvider::checkIsJson", "doc": "&quot;Check that $value is valid json.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_assertNumeric", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::assertNumeric", "doc": "&quot;Ensure that a value can be parased into a float or int.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_gcd", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::gcd", "doc": "&quot;Find the greatest common divisor between two numbers.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_numeric", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::numeric", "doc": "&quot;Check that $value is numeric in a php-version consistent way.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkNumeric", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkNumeric", "doc": "&quot;Check that $value is numeric.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkRealNumber", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkRealNumber", "doc": "&quot;Check that $value is a real number.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkNaturalNumber", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkNaturalNumber", "doc": "&quot;Check that $value is a natural number.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkGreaterThan", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkGreaterThan", "doc": "&quot;Check if $value &gt; $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkGreaterThanOrEqual", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkGreaterThanOrEqual", "doc": "&quot;Check if $value &gt;= $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkLessThan", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkLessThan", "doc": "&quot;Check if $value &amp;lt; $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkLessThanOrEqual", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkLessThanOrEqual", "doc": "&quot;Check if $value &amp;lt;= $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkFloatEqual", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkFloatEqual", "doc": "&quot;Check if $value is extremely close to $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkOdd", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkOdd", "doc": "&quot;Check that $value is an odd integer.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkEven", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkEven", "doc": "&quot;Check that $value is an even integer.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkPositive", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkPositive", "doc": "&quot;Check if $value is positive.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkNegative", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkNegative", "doc": "&quot;Check if $value is negative.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkPrimeRelativeTo", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkPrimeRelativeTo", "doc": "&quot;Check if $value is prime relative to $against.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\NumberCheckProvider", "fromLink": "Moccalotto/Valit/Providers/NumberCheckProvider.html", "link": "Moccalotto/Valit/Providers/NumberCheckProvider.html#method_checkDivisibleBy", "name": "Moccalotto\\Valit\\Providers\\NumberCheckProvider::checkDivisibleBy", "doc": "&quot;Check if $value is prime relative to $against.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html#method_checkObjectOrClass", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider::checkObjectOrClass", "doc": "&quot;Check if is object or class.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html#method_checkClassName", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider::checkClassName", "doc": "&quot;Check if is class name.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html#method_checkInterfaceName", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider::checkInterfaceName", "doc": "&quot;Check if value is the name of an interface.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html#method_checkTraitName", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider::checkTraitName", "doc": "&quot;Check if value is the fqcn of a trait.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html#method_checkInstanceOf", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider::checkInstanceOf", "doc": "&quot;Check if $value is an instance of $fqcn.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html#method_checkImplements", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider::checkImplements", "doc": "&quot;Check if value implements the $fqcn interface.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html#method_checkHasMethod", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider::checkHasMethod", "doc": "&quot;Check if value is an object or class that has the given method.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html#method_checkHasProperty", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider::checkHasProperty", "doc": "&quot;Check if value is an object or class that has the given propert.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider", "fromLink": "Moccalotto/Valit/Providers/ObjectCheckProvider.html", "link": "Moccalotto/Valit/Providers/ObjectCheckProvider.html#method_checkHasTrait", "name": "Moccalotto\\Valit\\Providers\\ObjectCheckProvider::checkHasTrait", "doc": "&quot;Check if value is an object or class that uses the given trait.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkHexString", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkHexString", "doc": "&quot;Check if $value contains only hexidecimal characters.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkDecimalString", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkDecimalString", "doc": "&quot;Check if $value contains only decimal characters.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkEmail", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkEmail", "doc": "&quot;Check if $value contains a syntax-valid email address.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkUppercase", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkUppercase", "doc": "&quot;Check if $value is only uppercase characters.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkLowercase", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkLowercase", "doc": "&quot;Check if $value is only lowercase characters.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkAlphaNumeric", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkAlphaNumeric", "doc": "&quot;Check if $value contains only alpha-numeric characters.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkMatchesRegex", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkMatchesRegex", "doc": "&quot;Check if $value matches a given regular regex.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkStringable", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkStringable", "doc": "&quot;Check if a given value can be converted to a string in a meaningful way.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkStartsWith", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkStartsWith", "doc": "&quot;Check if $value starts with a given string.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkEndsWith", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkEndsWith", "doc": "&quot;Check if $value ends with a given string.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkContainsString", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkContainsString", "doc": "&quot;Check if $value contains a given string.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkShorterThan", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkShorterThan", "doc": "&quot;Check if $value is a string that is shorter than $length.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkLongerThan", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkLongerThan", "doc": "&quot;Check if $value is a string that is longer than $length.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\StringCheckProvider", "fromLink": "Moccalotto/Valit/Providers/StringCheckProvider.html", "link": "Moccalotto/Valit/Providers/StringCheckProvider.html#method_checkLength", "name": "Moccalotto\\Valit\\Providers\\StringCheckProvider::checkLength", "doc": "&quot;Check if $value is a string that has the length $length.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/UriCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\UriCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UriCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UriCheckProvider.html", "link": "Moccalotto/Valit/Providers/UriCheckProvider.html#method_checkHostname", "name": "Moccalotto\\Valit\\Providers\\UriCheckProvider::checkHostname", "doc": "&quot;Check if $value is a valid host name.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UriCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UriCheckProvider.html", "link": "Moccalotto/Valit/Providers/UriCheckProvider.html#method_checkIpAddress", "name": "Moccalotto\\Valit\\Providers\\UriCheckProvider::checkIpAddress", "doc": "&quot;Check if $value is a valid ipv4 or ipv6 address&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UriCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UriCheckProvider.html", "link": "Moccalotto/Valit/Providers/UriCheckProvider.html#method_checkUrl", "name": "Moccalotto\\Valit\\Providers\\UriCheckProvider::checkUrl", "doc": "&quot;Check if $value is a complete and absolute web url&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/UuidCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\UuidCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UuidCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UuidCheckProvider.html", "link": "Moccalotto/Valit/Providers/UuidCheckProvider.html#method_parseUuid", "name": "Moccalotto\\Valit\\Providers\\UuidCheckProvider::parseUuid", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UuidCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UuidCheckProvider.html", "link": "Moccalotto/Valit/Providers/UuidCheckProvider.html#method_checkIsUuid", "name": "Moccalotto\\Valit\\Providers\\UuidCheckProvider::checkIsUuid", "doc": "&quot;Check if $value is a uuid.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UuidCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UuidCheckProvider.html", "link": "Moccalotto/Valit/Providers/UuidCheckProvider.html#method_checkUuidVersion", "name": "Moccalotto\\Valit\\Providers\\UuidCheckProvider::checkUuidVersion", "doc": "&quot;Check if $value is a uuid.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UuidCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UuidCheckProvider.html", "link": "Moccalotto/Valit/Providers/UuidCheckProvider.html#method_checkUidV1", "name": "Moccalotto\\Valit\\Providers\\UuidCheckProvider::checkUidV1", "doc": "&quot;Check if $value is a version 1 uuid&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UuidCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UuidCheckProvider.html", "link": "Moccalotto/Valit/Providers/UuidCheckProvider.html#method_checkUidV2", "name": "Moccalotto\\Valit\\Providers\\UuidCheckProvider::checkUidV2", "doc": "&quot;Check if $value is a version 2 uuid&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UuidCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UuidCheckProvider.html", "link": "Moccalotto/Valit/Providers/UuidCheckProvider.html#method_checkUidV3", "name": "Moccalotto\\Valit\\Providers\\UuidCheckProvider::checkUidV3", "doc": "&quot;Check if $value is a version 3 uuid&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UuidCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UuidCheckProvider.html", "link": "Moccalotto/Valit/Providers/UuidCheckProvider.html#method_checkUidV4", "name": "Moccalotto\\Valit\\Providers\\UuidCheckProvider::checkUidV4", "doc": "&quot;Check if $value is a version 4 uuid&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\UuidCheckProvider", "fromLink": "Moccalotto/Valit/Providers/UuidCheckProvider.html", "link": "Moccalotto/Valit/Providers/UuidCheckProvider.html#method_checkUidV5", "name": "Moccalotto\\Valit\\Providers\\UuidCheckProvider::checkUidV5", "doc": "&quot;Check if $value is a version 5 uuid&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Providers", "fromLink": "Moccalotto/Valit/Providers.html", "link": "Moccalotto/Valit/Providers/XmlCheckProvider.html", "name": "Moccalotto\\Valit\\Providers\\XmlCheckProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\XmlCheckProvider", "fromLink": "Moccalotto/Valit/Providers/XmlCheckProvider.html", "link": "Moccalotto/Valit/Providers/XmlCheckProvider.html#method_canParse", "name": "Moccalotto\\Valit\\Providers\\XmlCheckProvider::canParse", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\XmlCheckProvider", "fromLink": "Moccalotto/Valit/Providers/XmlCheckProvider.html", "link": "Moccalotto/Valit/Providers/XmlCheckProvider.html#method_checkXmlString", "name": "Moccalotto\\Valit\\Providers\\XmlCheckProvider::checkXmlString", "doc": "&quot;Check if $value is a string containing valid xml.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\XmlCheckProvider", "fromLink": "Moccalotto/Valit/Providers/XmlCheckProvider.html", "link": "Moccalotto/Valit/Providers/XmlCheckProvider.html#method_checkMatchesXmlAdvanced", "name": "Moccalotto\\Valit\\Providers\\XmlCheckProvider::checkMatchesXmlAdvanced", "doc": "&quot;Check that $value and $against are semantically the same.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\XmlCheckProvider", "fromLink": "Moccalotto/Valit/Providers/XmlCheckProvider.html", "link": "Moccalotto/Valit/Providers/XmlCheckProvider.html#method_checkMatchesXmlWithWhiteSpace", "name": "Moccalotto\\Valit\\Providers\\XmlCheckProvider::checkMatchesXmlWithWhiteSpace", "doc": "&quot;Check that $value matches $against, enforcing whitespace similarity as well.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\XmlCheckProvider", "fromLink": "Moccalotto/Valit/Providers/XmlCheckProvider.html", "link": "Moccalotto/Valit/Providers/XmlCheckProvider.html#method_checkMatchesXmlWithCase", "name": "Moccalotto\\Valit\\Providers\\XmlCheckProvider::checkMatchesXmlWithCase", "doc": "&quot;Check that $value matches $against, enforcing case similarity as well.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\XmlCheckProvider", "fromLink": "Moccalotto/Valit/Providers/XmlCheckProvider.html", "link": "Moccalotto/Valit/Providers/XmlCheckProvider.html#method_checkMatchesXmlStrict", "name": "Moccalotto\\Valit\\Providers\\XmlCheckProvider::checkMatchesXmlStrict", "doc": "&quot;Check that $value matches $against, enforcing whitespace and case similarities as well.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Providers\\XmlCheckProvider", "fromLink": "Moccalotto/Valit/Providers/XmlCheckProvider.html", "link": "Moccalotto/Valit/Providers/XmlCheckProvider.html#method_checkMatchesXml", "name": "Moccalotto\\Valit\\Providers\\XmlCheckProvider::checkMatchesXml", "doc": "&quot;Check that $value matches $against, ignoring differences in case and whitespace.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit", "fromLink": "Moccalotto/Valit.html", "link": "Moccalotto/Valit/Result.html", "name": "Moccalotto\\Valit\\Result", "doc": "&quot;Valit Result.&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Result", "fromLink": "Moccalotto/Valit/Result.html", "link": "Moccalotto/Valit/Result.html#method___construct", "name": "Moccalotto\\Valit\\Result::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Result", "fromLink": "Moccalotto/Valit/Result.html", "link": "Moccalotto/Valit/Result.html#method_success", "name": "Moccalotto\\Valit\\Result::success", "doc": "&quot;Did the validation succeed?&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Result", "fromLink": "Moccalotto/Valit/Result.html", "link": "Moccalotto/Valit/Result.html#method_message", "name": "Moccalotto\\Valit\\Result::message", "doc": "&quot;Get the error message template.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Result", "fromLink": "Moccalotto/Valit/Result.html", "link": "Moccalotto/Valit/Result.html#method_context", "name": "Moccalotto\\Valit\\Result::context", "doc": "&quot;Get the contextual variables connected to the check.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Result", "fromLink": "Moccalotto/Valit/Result.html", "link": "Moccalotto/Valit/Result.html#method_formatValue", "name": "Moccalotto\\Valit\\Result::formatValue", "doc": "&quot;Format a value for being displayed as a string in an error message.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Result", "fromLink": "Moccalotto/Valit/Result.html", "link": "Moccalotto/Valit/Result.html#method_renderErrorMessage", "name": "Moccalotto\\Valit\\Result::renderErrorMessage", "doc": "&quot;Render the error mesage, using the name and alias provided.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Test", "fromLink": "Moccalotto/Valit/Test.html", "link": "Moccalotto/Valit/Test/ContainerTestClass.html", "name": "Moccalotto\\Valit\\Test\\ContainerTestClass", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Test\\ContainerTestClass", "fromLink": "Moccalotto/Valit/Test/ContainerTestClass.html", "link": "Moccalotto/Valit/Test/ContainerTestClass.html#method_getIterator", "name": "Moccalotto\\Valit\\Test\\ContainerTestClass::getIterator", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Test\\ContainerTestClass", "fromLink": "Moccalotto/Valit/Test/ContainerTestClass.html", "link": "Moccalotto/Valit/Test/ContainerTestClass.html#method_validationData", "name": "Moccalotto\\Valit\\Test\\ContainerTestClass::validationData", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Test\\ContainerTestClass", "fromLink": "Moccalotto/Valit/Test/ContainerTestClass.html", "link": "Moccalotto/Valit/Test/ContainerTestClass.html#method___debugInfo", "name": "Moccalotto\\Valit\\Test\\ContainerTestClass::__debugInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Test\\ContainerTestClass", "fromLink": "Moccalotto/Valit/Test/ContainerTestClass.html", "link": "Moccalotto/Valit/Test/ContainerTestClass.html#method_jsonSerialize", "name": "Moccalotto\\Valit\\Test\\ContainerTestClass::jsonSerialize", "doc": "&quot;&quot;"},
            
            {"type": "Trait", "fromName": "Moccalotto\\Valit\\Traits", "fromLink": "Moccalotto/Valit/Traits.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html", "name": "Moccalotto\\Valit\\Traits\\ContainsResults", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_varName", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::varName", "doc": "&quot;Getter.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_alias", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::alias", "doc": "&quot;Set the variable name alias&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_value", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::value", "doc": "&quot;Getter.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_success", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::success", "doc": "&quot;Have all checks been completed successfully?&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_valid", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::valid", "doc": "&quot;Alias of success.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_invalid", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::invalid", "doc": "&quot;Alias of hasErrors.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_hasErrors", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::hasErrors", "doc": "&quot;Return true if there are errors.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_valueOr", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::valueOr", "doc": "&quot;Get the validated value, but use a fallback if the validation failed.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_results", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::results", "doc": "&quot;Get the results.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_addCustomResult", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::addCustomResult", "doc": "&quot;Add new result to the internal results list.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_registerResult", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::registerResult", "doc": "&quot;Add new result to the internal results list.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_registerManyResults", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::registerManyResults", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_renderedResults", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::renderedResults", "doc": "&quot;Get the results as an associative array.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_errorMessages", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::errorMessages", "doc": "&quot;Return an array of rendered error messages.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ContainsResults", "fromLink": "Moccalotto/Valit/Traits/ContainsResults.html", "link": "Moccalotto/Valit/Traits/ContainsResults.html#method_orThrowException", "name": "Moccalotto\\Valit\\Traits\\ContainsResults::orThrowException", "doc": "&quot;Throw exceptions if any failures has occurred or occur later in the execution stream.&quot;"},
            
            {"type": "Trait", "fromName": "Moccalotto\\Valit\\Traits", "fromLink": "Moccalotto/Valit/Traits.html", "link": "Moccalotto/Valit/Traits/ProvideViaReflection.html", "name": "Moccalotto\\Valit\\Traits\\ProvideViaReflection", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ProvideViaReflection", "fromLink": "Moccalotto/Valit/Traits/ProvideViaReflection.html", "link": "Moccalotto/Valit/Traits/ProvideViaReflection.html#method_checksFor", "name": "Moccalotto\\Valit\\Traits\\ProvideViaReflection::checksFor", "doc": "&quot;Get the checks for a given method.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Traits\\ProvideViaReflection", "fromLink": "Moccalotto/Valit/Traits/ProvideViaReflection.html", "link": "Moccalotto/Valit/Traits/ProvideViaReflection.html#method_provides", "name": "Moccalotto\\Valit\\Traits\\ProvideViaReflection::provides", "doc": "&quot;Return all the checks provided by this checkprovider.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Util", "fromLink": "Moccalotto/Valit/Util.html", "link": "Moccalotto/Valit/Util/FilterSet.html", "name": "Moccalotto\\Valit\\Util\\FilterSet", "doc": "&quot;A Container for filters&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FilterSet", "fromLink": "Moccalotto/Valit/Util/FilterSet.html", "link": "Moccalotto/Valit/Util/FilterSet.html#method___construct", "name": "Moccalotto\\Valit\\Util\\FilterSet::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FilterSet", "fromLink": "Moccalotto/Valit/Util/FilterSet.html", "link": "Moccalotto/Valit/Util/FilterSet.html#method_isValueRequired", "name": "Moccalotto\\Valit\\Util\\FilterSet::isValueRequired", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FilterSet", "fromLink": "Moccalotto/Valit/Util/FilterSet.html", "link": "Moccalotto/Valit/Util/FilterSet.html#method_all", "name": "Moccalotto\\Valit\\Util\\FilterSet::all", "doc": "&quot;Get all filters (except the \&quot;required\&quot; filter)&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FilterSet", "fromLink": "Moccalotto/Valit/Util/FilterSet.html", "link": "Moccalotto/Valit/Util/FilterSet.html#method_normalize", "name": "Moccalotto\\Valit\\Util\\FilterSet::normalize", "doc": "&quot;Normalize a set of filters.&quot;"},
            
            {"type": "Class", "fromName": "Moccalotto\\Valit\\Util", "fromLink": "Moccalotto/Valit/Util.html", "link": "Moccalotto/Valit/Util/FlattenedContainer.html", "name": "Moccalotto\\Valit\\Util\\FlattenedContainer", "doc": "&quot;A Container for data to be validated.&quot;"},
                                                        {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FlattenedContainer", "fromLink": "Moccalotto/Valit/Util/FlattenedContainer.html", "link": "Moccalotto/Valit/Util/FlattenedContainer.html#method___construct", "name": "Moccalotto\\Valit\\Util\\FlattenedContainer::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FlattenedContainer", "fromLink": "Moccalotto/Valit/Util/FlattenedContainer.html", "link": "Moccalotto/Valit/Util/FlattenedContainer.html#method_isSimpleValue", "name": "Moccalotto\\Valit\\Util\\FlattenedContainer::isSimpleValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FlattenedContainer", "fromLink": "Moccalotto/Valit/Util/FlattenedContainer.html", "link": "Moccalotto/Valit/Util/FlattenedContainer.html#method_expandedValue", "name": "Moccalotto\\Valit\\Util\\FlattenedContainer::expandedValue", "doc": "&quot;Expand the data available on an object.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FlattenedContainer", "fromLink": "Moccalotto/Valit/Util/FlattenedContainer.html", "link": "Moccalotto/Valit/Util/FlattenedContainer.html#method_flatten", "name": "Moccalotto\\Valit\\Util\\FlattenedContainer::flatten", "doc": "&quot;Flatten multi dimensional array into associative array with slashes&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FlattenedContainer", "fromLink": "Moccalotto/Valit/Util/FlattenedContainer.html", "link": "Moccalotto/Valit/Util/FlattenedContainer.html#method_globToRegex", "name": "Moccalotto\\Valit\\Util\\FlattenedContainer::globToRegex", "doc": "&quot;Turn a field name glob into a regular expression.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FlattenedContainer", "fromLink": "Moccalotto/Valit/Util/FlattenedContainer.html", "link": "Moccalotto/Valit/Util/FlattenedContainer.html#method_find", "name": "Moccalotto\\Valit\\Util\\FlattenedContainer::find", "doc": "&quot;Find all the values that match the given field name glob.&quot;"},
                    {"type": "Method", "fromName": "Moccalotto\\Valit\\Util\\FlattenedContainer", "fromLink": "Moccalotto/Valit/Util/FlattenedContainer.html", "link": "Moccalotto/Valit/Util/FlattenedContainer.html#method___debugInfo", "name": "Moccalotto\\Valit\\Util\\FlattenedContainer::__debugInfo", "doc": "&quot;Get the debug info for this container.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


